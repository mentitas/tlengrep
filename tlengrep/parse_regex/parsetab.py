
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CHAR LCORCHETE LLLAVE LPAREN MINUS NUMBER OPTIONAL OR PLUS POWER POWER_RANGE RANGE RCORCHETE RLLAVE RPAREN STAR _D _WP : SP :S : R OR SS : RR : T RR : TT : K START : K PLUST : K OPTIONALT : K POWERT : K POWER_RANGET : KK : LPAREN P RPARENK : LCORCHETE FK : SYMBK : _WK : _DK : RANGEF : SYMB FF : RANGE FF : RCORCHETESYMB : CHARSYMB : NUMBERSYMB : MINUSSYMB : LLLAVESYMB : RLLAVE'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,25,28,29,30,31,32,],[-2,0,-1,-4,-6,-12,-15,-16,-17,-18,-22,-23,-24,-25,-26,-5,-7,-8,-9,-10,-11,-14,-21,-3,-13,-19,-20,]),'LPAREN':([0,4,5,6,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,25,28,30,31,32,],[6,6,-12,6,-15,-16,-17,-18,-22,-23,-24,-25,-26,6,-7,-8,-9,-10,-11,-14,-21,-13,-19,-20,]),'LCORCHETE':([0,4,5,6,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,25,28,30,31,32,],[7,7,-12,7,-15,-16,-17,-18,-22,-23,-24,-25,-26,7,-7,-8,-9,-10,-11,-14,-21,-13,-19,-20,]),'_W':([0,4,5,6,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,25,28,30,31,32,],[9,9,-12,9,-15,-16,-17,-18,-22,-23,-24,-25,-26,9,-7,-8,-9,-10,-11,-14,-21,-13,-19,-20,]),'_D':([0,4,5,6,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,25,28,30,31,32,],[10,10,-12,10,-15,-16,-17,-18,-22,-23,-24,-25,-26,10,-7,-8,-9,-10,-11,-14,-21,-13,-19,-20,]),'RANGE':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,25,26,27,28,30,31,32,],[11,11,-12,11,27,-15,-16,-17,-18,-22,-23,-24,-25,-26,11,-7,-8,-9,-10,-11,-14,27,27,-21,-13,-19,-20,]),'CHAR':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,25,26,27,28,30,31,32,],[12,12,-12,12,12,-15,-16,-17,-18,-22,-23,-24,-25,-26,12,-7,-8,-9,-10,-11,-14,12,12,-21,-13,-19,-20,]),'NUMBER':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,25,26,27,28,30,31,32,],[13,13,-12,13,13,-15,-16,-17,-18,-22,-23,-24,-25,-26,13,-7,-8,-9,-10,-11,-14,13,13,-21,-13,-19,-20,]),'MINUS':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,25,26,27,28,30,31,32,],[14,14,-12,14,14,-15,-16,-17,-18,-22,-23,-24,-25,-26,14,-7,-8,-9,-10,-11,-14,14,14,-21,-13,-19,-20,]),'LLLAVE':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,25,26,27,28,30,31,32,],[15,15,-12,15,15,-15,-16,-17,-18,-22,-23,-24,-25,-26,15,-7,-8,-9,-10,-11,-14,15,15,-21,-13,-19,-20,]),'RLLAVE':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,25,26,27,28,30,31,32,],[16,16,-12,16,16,-15,-16,-17,-18,-22,-23,-24,-25,-26,16,-7,-8,-9,-10,-11,-14,16,16,-21,-13,-19,-20,]),'RPAREN':([2,3,4,5,6,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,28,29,30,31,32,],[-1,-4,-6,-12,-2,-15,-16,-17,-18,-22,-23,-24,-25,-26,-5,-7,-8,-9,-10,-11,30,-14,-21,-3,-13,-19,-20,]),'OR':([3,4,5,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,25,28,30,31,32,],[17,-6,-12,-15,-16,-17,-18,-22,-23,-24,-25,-26,-5,-7,-8,-9,-10,-11,-14,-21,-13,-19,-20,]),'STAR':([5,8,9,10,11,12,13,14,15,16,25,28,30,31,32,],[19,-15,-16,-17,-18,-22,-23,-24,-25,-26,-14,-21,-13,-19,-20,]),'PLUS':([5,8,9,10,11,12,13,14,15,16,25,28,30,31,32,],[20,-15,-16,-17,-18,-22,-23,-24,-25,-26,-14,-21,-13,-19,-20,]),'OPTIONAL':([5,8,9,10,11,12,13,14,15,16,25,28,30,31,32,],[21,-15,-16,-17,-18,-22,-23,-24,-25,-26,-14,-21,-13,-19,-20,]),'POWER':([5,8,9,10,11,12,13,14,15,16,25,28,30,31,32,],[22,-15,-16,-17,-18,-22,-23,-24,-25,-26,-14,-21,-13,-19,-20,]),'POWER_RANGE':([5,8,9,10,11,12,13,14,15,16,25,28,30,31,32,],[23,-15,-16,-17,-18,-22,-23,-24,-25,-26,-14,-21,-13,-19,-20,]),'RCORCHETE':([7,12,13,14,15,16,26,27,],[28,-22,-23,-24,-25,-26,28,28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'P':([0,6,],[1,24,]),'S':([0,6,17,],[2,2,29,]),'R':([0,4,6,17,],[3,18,3,3,]),'T':([0,4,6,17,],[4,4,4,4,]),'K':([0,4,6,17,],[5,5,5,5,]),'SYMB':([0,4,6,7,17,26,27,],[8,8,8,26,8,26,26,]),'F':([7,26,27,],[25,31,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> P","S'",1,None,None,None),
  ('P -> S','P',1,'p_P_S','parser.py',43),
  ('P -> <empty>','P',0,'p_LAMBDA','parser.py',47),
  ('S -> R OR S','S',3,'p_union','parser.py',55),
  ('S -> R','S',1,'p_S_R','parser.py',59),
  ('R -> T R','R',2,'p_concat','parser.py',67),
  ('R -> T','R',1,'p_R_T','parser.py',71),
  ('T -> K STAR','T',2,'p_STAR','parser.py',80),
  ('T -> K PLUS','T',2,'p_PLUS','parser.py',85),
  ('T -> K OPTIONAL','T',2,'p_OPTIONAL','parser.py',90),
  ('T -> K POWER','T',2,'p_POWER','parser.py',95),
  ('T -> K POWER_RANGE','T',2,'p_POWER_RANGE','parser.py',102),
  ('T -> K','T',1,'p_K','parser.py',121),
  ('K -> LPAREN P RPAREN','K',3,'p_braces','parser.py',130),
  ('K -> LCORCHETE F','K',2,'p_CHAR_RANGE','parser.py',135),
  ('K -> SYMB','K',1,'p_SYMB','parser.py',140),
  ('K -> _W','K',1,'p_W','parser.py',145),
  ('K -> _D','K',1,'p_D','parser.py',154),
  ('K -> RANGE','K',1,'p_RANGE','parser.py',161),
  ('F -> SYMB F','F',2,'p_SYMBF','parser.py',175),
  ('F -> RANGE F','F',2,'p_RANGEF','parser.py',181),
  ('F -> RCORCHETE','F',1,'p_RCORCHETE','parser.py',197),
  ('SYMB -> CHAR','SYMB',1,'p_CHAR','parser.py',205),
  ('SYMB -> NUMBER','SYMB',1,'p_NUMBER','parser.py',209),
  ('SYMB -> MINUS','SYMB',1,'p_MINUS','parser.py',213),
  ('SYMB -> LLLAVE','SYMB',1,'p_LLLAVE','parser.py',217),
  ('SYMB -> RLLAVE','SYMB',1,'p_RLLAVE','parser.py',221),
]
